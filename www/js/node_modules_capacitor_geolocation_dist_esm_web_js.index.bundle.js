"use strict";
(self["webpackChunkgeoportail_app"] = self["webpackChunkgeoportail_app"] || []).push([["node_modules_capacitor_geolocation_dist_esm_web_js"],{

/***/ "./node_modules/@capacitor/geolocation/dist/esm/web.js":
/*!*************************************************************!*\
  !*** ./node_modules/@capacitor/geolocation/dist/esm/web.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Geolocation: () => (/* binding */ Geolocation),
/* harmony export */   GeolocationWeb: () => (/* binding */ GeolocationWeb)
/* harmony export */ });
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ "./node_modules/@capacitor/core/dist/index.js");

class GeolocationWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.WebPlugin {
    async getCurrentPosition(options) {
        return new Promise((resolve, reject) => {
            navigator.geolocation.getCurrentPosition(pos => {
                resolve(pos);
            }, err => {
                reject(err);
            }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));
        });
    }
    async watchPosition(options, callback) {
        const id = navigator.geolocation.watchPosition(pos => {
            callback(pos);
        }, err => {
            callback(null, err);
        }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));
        return `${id}`;
    }
    async clearWatch(options) {
        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));
    }
    async checkPermissions() {
        if (typeof navigator === 'undefined' || !navigator.permissions) {
            throw this.unavailable('Permissions API not available in this browser');
        }
        const permission = await window.navigator.permissions.query({
            name: 'geolocation',
        });
        return { location: permission.state, coarseLocation: permission.state };
    }
    async requestPermissions() {
        throw this.unimplemented('Not implemented on web.');
    }
}
const Geolocation = new GeolocationWeb();

//# sourceMappingURL=web.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2NhcGFjaXRvcl9nZW9sb2NhdGlvbl9kaXN0X2VzbV93ZWJfanMuaW5kZXguYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUE0QztBQUNyQyw2QkFBNkIsc0RBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhLGtCQUFrQiwwREFBMEQ7QUFDekYsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUyxrQkFBa0IsMERBQTBEO0FBQ3JGLGtCQUFrQixHQUFHO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nZW9wb3J0YWlsLWFwcC8uL25vZGVfbW9kdWxlcy9AY2FwYWNpdG9yL2dlb2xvY2F0aW9uL2Rpc3QvZXNtL3dlYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXZWJQbHVnaW4gfSBmcm9tICdAY2FwYWNpdG9yL2NvcmUnO1xuZXhwb3J0IGNsYXNzIEdlb2xvY2F0aW9uV2ViIGV4dGVuZHMgV2ViUGx1Z2luIHtcbiAgICBhc3luYyBnZXRDdXJyZW50UG9zaXRpb24ob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihwb3MgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUocG9zKTtcbiAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICB9LCBPYmplY3QuYXNzaWduKHsgZW5hYmxlSGlnaEFjY3VyYWN5OiBmYWxzZSwgdGltZW91dDogMTAwMDAsIG1heGltdW1BZ2U6IDAgfSwgb3B0aW9ucykpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgYXN5bmMgd2F0Y2hQb3NpdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xuICAgICAgICBjb25zdCBpZCA9IG5hdmlnYXRvci5nZW9sb2NhdGlvbi53YXRjaFBvc2l0aW9uKHBvcyA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjayhwb3MpO1xuICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgZXJyKTtcbiAgICAgICAgfSwgT2JqZWN0LmFzc2lnbih7IGVuYWJsZUhpZ2hBY2N1cmFjeTogZmFsc2UsIHRpbWVvdXQ6IDEwMDAwLCBtYXhpbXVtQWdlOiAwIH0sIG9wdGlvbnMpKTtcbiAgICAgICAgcmV0dXJuIGAke2lkfWA7XG4gICAgfVxuICAgIGFzeW5jIGNsZWFyV2F0Y2gob3B0aW9ucykge1xuICAgICAgICB3aW5kb3cubmF2aWdhdG9yLmdlb2xvY2F0aW9uLmNsZWFyV2F0Y2gocGFyc2VJbnQob3B0aW9ucy5pZCwgMTApKTtcbiAgICB9XG4gICAgYXN5bmMgY2hlY2tQZXJtaXNzaW9ucygpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgPT09ICd1bmRlZmluZWQnIHx8ICFuYXZpZ2F0b3IucGVybWlzc2lvbnMpIHtcbiAgICAgICAgICAgIHRocm93IHRoaXMudW5hdmFpbGFibGUoJ1Blcm1pc3Npb25zIEFQSSBub3QgYXZhaWxhYmxlIGluIHRoaXMgYnJvd3NlcicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBlcm1pc3Npb24gPSBhd2FpdCB3aW5kb3cubmF2aWdhdG9yLnBlcm1pc3Npb25zLnF1ZXJ5KHtcbiAgICAgICAgICAgIG5hbWU6ICdnZW9sb2NhdGlvbicsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4geyBsb2NhdGlvbjogcGVybWlzc2lvbi5zdGF0ZSwgY29hcnNlTG9jYXRpb246IHBlcm1pc3Npb24uc3RhdGUgfTtcbiAgICB9XG4gICAgYXN5bmMgcmVxdWVzdFBlcm1pc3Npb25zKCkge1xuICAgICAgICB0aHJvdyB0aGlzLnVuaW1wbGVtZW50ZWQoJ05vdCBpbXBsZW1lbnRlZCBvbiB3ZWIuJyk7XG4gICAgfVxufVxuY29uc3QgR2VvbG9jYXRpb24gPSBuZXcgR2VvbG9jYXRpb25XZWIoKTtcbmV4cG9ydCB7IEdlb2xvY2F0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9